apiVersion: k8s.streamnative.io/v1alpha1
kind: PulsarCoordinator
metadata:
  name: private-cloud
  namespace: pulsar
spec:
  image: streamnative/private-cloud:3.1.1.1
  detector:
    serviceEndpoint:
      pulsarServiceURL: 'pulsar://private-cloud-broker-headless:6650'
      webServiceURL: 'http://private-cloud-broker-headless:8080'
---
apiVersion: zookeeper.streamnative.io/v1alpha1
kind: ZooKeeperCluster
metadata:
  name: private-cloud
  namespace: pulsar
  labels:
    k8s.streamnative.io/coordinator-name: private-cloud
spec:
  image: streamnative/private-cloud:3.1.1.1
  replicas: 3
  pod:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    securityContext:
      runAsNonRoot: true
  persistence:
    reclaimPolicy: Delete
---
apiVersion: bookkeeper.streamnative.io/v1alpha1
kind: BookKeeperCluster
metadata:
  name: private-cloud
  namespace: pulsar
  labels:
    k8s.streamnative.io/coordinator-name: private-cloud
spec:
  image: streamnative/private-cloud:3.1.1.1
  replicas: 3
  zkServers: private-cloud-zk:2181
  pod:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    securityContext:
      runAsNonRoot: true
  storage:
    reclaimPolicy: Delete
  autoRecovery:
    pod:
      annotations:
        prometheus.io/port: "8000"
        prometheus.io/scrape: "true"
      resources:
        requests:
          cpu: 200m
          memory: 512Mi
    replicas: 3
---
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarBroker
metadata:
  name: private-cloud
  namespace: pulsar
  labels:
    k8s.streamnative.io/coordinator-name: private-cloud
spec:
  image: streamnative/private-cloud:3.1.1.1
  replicas: 3
  zkServers: private-cloud-zk:2181
  config:
    clusterName: private-cloud
  pod:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    securityContext:
      runAsNonRoot: true
---
apiVersion: pulsar.streamnative.io/v1alpha1
kind: PulsarProxy
metadata:
  name: private-cloud
  namespace: pulsar
  labels:
    k8s.streamnative.io/coordinator-name: private-cloud
spec:
  image: streamnative/private-cloud:3.1.1.1
  replicas: 2
  brokerAddress: private-cloud-broker
  config:
    clusterName: private-cloud
  pod:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
    securityContext:
      runAsNonRoot: true
    annotations:
      prometheus.io/port: "8080"
      prometheus.io/scrape: "true"
---
apiVersion: k8s.streamnative.io/v1alpha1
kind: Console
metadata:
  name: private-cloud
  namespace: pulsar
  labels:
    k8s.streamnative.io/coordinator-name: private-cloud
spec:
  image: streamnative/private-cloud-console:v2.3.3
  webServiceUrl: http://private-cloud-broker:8080
